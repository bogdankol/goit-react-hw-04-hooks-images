{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","giveDataToApp","useState","value","setValue","className","s","SearchForm","onSubmit","e","preventDefault","type","button","input","autoComplete","autoFocus","placeholder","onChange","currentTarget","ImageGalleryItem","array","onClick","onClickHandler","map","el","item","src","webformatURL","alt","tags","img","largeImageURL","id","LoaderQ","container","color","height","width","timeout","modalRoot","document","querySelector","Modal","onCloseModalWindow","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","overlay","target","modal","Button","onButtonClick","btn","fetchData","page","fetch","ImageGallery","query","setModal","url","setUrl","imagesArray","setImagesArray","setPage","error","setError","status","setStatus","isLoading","setIsLoading","then","res","ok","json","Promise","reject","Error","result","hits","length","alert","catch","err","scrollTo","top","documentElement","scrollHeight","behavior","closeModal","div","message","list","dataset","largeurl","onClose","Loader","prev","App","setQuery","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14483ced.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__Olyg2\",\"img\":\"ImageGalleryItem_img__1kqGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3kmTr\",\"modal\":\"Modal_modal__ASOfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2mnrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2Dyed\"};","import React, { useState } from \"react\";\r\nimport s from \"./Searchbar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Searchbar({ giveDataToApp }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const inputHandler = (e) => {\r\n    setValue(e.currentTarget.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    giveDataToApp(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={submitHandler}>\r\n        <button type=\"submit\" className={s.button}>\r\n          <span className=\"s.label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={inputHandler}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  giveDataToApp: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ array, onClick }) {\r\n  const onClickHandler = (e) => {\r\n    onClick(e);\r\n  };\r\n\r\n  return array.map((el) => (\r\n    <li key={el.id} className={s.item} onClick={onClickHandler}>\r\n      <img\r\n        src={el.webformatURL}\r\n        alt={el.tags}\r\n        className={s.img}\r\n        data-largeurl={el.largeImageURL}\r\n      ></img>\r\n    </li>\r\n  ));\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  array: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport s from \"./Loader.module.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction LoaderQ() {\r\n  return (\r\n    <div className={s.container}>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={99000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoaderQ;\r\n","import React, { useEffect } from \"react\";\r\nimport s from \"./Modal.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nfunction Modal({ src, onCloseModalWindow }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onCloseModalWindow(e);\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onCloseModalWindow(e);\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>\r\n        <img src={src} alt=\"bigImage\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string,\r\n  onCloseModalWindow: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onButtonClick }) {\r\n  const buttonClickHandler = (e) => {\r\n    onButtonClick();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={buttonClickHandler} className={s.btn}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onButtonClick: PropTypes.func,\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport Loader from \"../Loader\";\r\nimport Modal from \"../Modal\";\r\nimport Button from \"../Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst fetchData = (input, page) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${input}&page=${page}&key=22223449-0f7605970ab6351a0732adfe1&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n};\r\n\r\nfunction ImageGallery({ query }) {\r\n  const [modal, setModal] = useState(false);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(\"idle\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (query === \"\") {\r\n      return;\r\n    }\r\n\r\n    setPage(1);\r\n    setImagesArray([]);\r\n    setIsLoading(true);\r\n\r\n    fetchData(query, page)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setIsLoading(true);\r\n          return res.json();\r\n        }\r\n        return Promise.reject(\r\n          new Error(\r\n            `there are some problems with server or your input is bizarre.`\r\n          )\r\n        );\r\n      })\r\n      .then((result) => {\r\n        if (result.hits.length > 0) {\r\n          setImagesArray(result.hits);\r\n          setStatus(\"resolved\");\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        setStatus(\"idle\");\r\n        setIsLoading(false);\r\n        return alert(\"there are no results!\");\r\n      })\r\n      .catch((err) => {\r\n        setStatus(\"rejected\");\r\n        setError(err);\r\n      });\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (page === 1) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    fetchData(query, page)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setIsLoading(true);\r\n          return res.json();\r\n        }\r\n        return Promise.reject(\r\n          new Error(\r\n            `there are some problems with server or your input is bizarre.`\r\n          )\r\n        );\r\n      })\r\n      .then((result) => {\r\n        if (result.hits.length > 0) {\r\n          setImagesArray((array) => [...array, ...result.hits]);\r\n          setStatus(\"resolved\");\r\n          setIsLoading(false);\r\n\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        setStatus(\"idle\");\r\n        setIsLoading(false);\r\n        return alert(\"there are no results!\");\r\n      })\r\n      .catch((err) => {\r\n        setStatus(\"rejected\");\r\n        setError(err);\r\n      });\r\n  }, [page]);\r\n\r\n  const onClickHandler = () => {\r\n    setPage((prev) => prev + 1);\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    setUrl(e.target.dataset.largeurl);\r\n    setModal(true);\r\n  };\r\n\r\n  const closeModal = (e) => {\r\n    setModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {status === \"rejected\" && (\r\n        <div className={s.div}>\r\n          <h2>{error.message}</h2>\r\n        </div>\r\n      )}\r\n\r\n      {status === \"resolved\" && (\r\n        <div className={s.div}>\r\n          <ul className={s.list}>\r\n            <ImageGalleryItem\r\n              array={imagesArray}\r\n              onClick={onClick}\r\n              onClose={closeModal}\r\n            />\r\n          </ul>\r\n          {isLoading && <Loader />}\r\n          {imagesArray.length >= 12 && (\r\n            <Button onButtonClick={onClickHandler} />\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {modal && <Modal src={url} onCloseModalWindow={closeModal} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useState } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n\n  const getQueryFromInput = (data) => {\n    setQuery(data);\n  };\n\n  return (\n    <>\n      <Searchbar giveDataToApp={getQueryFromInput} />\n      <ImageGallery query={query} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2OtuN\",\"SearchForm\":\"Searchbar_SearchForm__1w-vU\",\"button\":\"Searchbar_button__2F1t7\",\"label\":\"Searchbar_label__2oOuc\",\"input\":\"Searchbar_input__2TvcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ImageGallery_div__2gGw-\",\"list\":\"ImageGallery_list__8RXis\"};"],"sourceRoot":""}